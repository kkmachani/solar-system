name: Code coverage 

on:
  workflow_dispatch:
  push:
     branches:
         - main
         - 'feature/*'
env:
   MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
   MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
   MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}
jobs:
    unit-testing:
        name: Unit-Testing
        strategy:
            matrix:
                nodejs_version: [18,19,20]
                operating_system: [ubuntu-latest, macos-latest]
                exclude:
                    - nodejs_version: 18
                      operating_system: macos-latest
        runs-on: ${{matrix.operating_system}} 
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - name: Setup Nodejs version - ${{matrix.nodejs_version}}
          uses: actions/setup-node@v3
          with:
              node-version: ${{matrix.nodejs_version}}

        - name: Install Dependencies
          run: npm install
        
        - name: Unit Testing
          run: npm test


    code-coverage:
        name: code coverage
        needs: [unit-testing]
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - name: Setup Nodejs version - 18
          uses: actions/setup-node@v3
          with:
              node-version: 18

        - name: Install Dependencies
          run: npm install
        
        - name: check code coverage
          continue-on-error: true # continues the workflow even one of the job is faile
          run: npm run coverage

        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage Result
            path: coverage
            retention-days: 
    
    Docker:
          name: Containerization
          needs: [unit-testing, code-coverage]
          runs-on: ubuntu-latest
          steps:
          - name: Checkout repo
            uses: actions/checkout@v4
            
          - name: Docker Login
            uses: docker/login-action@v3
            with:
              username: ${{ vars.DOCKER_USERNAME}}
              password: ${{ secrets.DOCKER_PASSWORD}}
            


        

